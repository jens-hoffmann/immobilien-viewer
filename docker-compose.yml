version: '3.8'

services:

  flower:
    image: mher/flower
    ports:
      - 5555:5555
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
     - "5672:5672"
     - "15672:15672"
    env_file:
      - .env

  redis:
    image: redis:7-alpine

  django:
    container_name: django
    build:
      context: .
    command: sh -c "python manage.py runserver 0.0.0.0:8000 --noreload"
    volumes:
      - app:/app
    ports:
      - 8000:8000
    environment:
      - DEBUG=1
      - APP_ENV=prod
      - ALLOWED_HOSTS=django,localhost,127.0.0.1,0.0.0.0
      - OTEL_SERVICE_NAME=my-otel-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4318/v1/logs
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318/v1/metrics
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
      - OTEL_LOG_LEVEL=DEBUG
    depends_on:
      - redis
      - db
      - otel-collector

  celeryworker:
    container_name: celeryworker
    build:
      context: ./celeryworker
    command: celery -A celerysetup worker -l INFO -Q celery,posttasks,scrapingtasks,dead_letter -B
    env_file:
      - .env
    environment:
      - OTEL_SERVICE_NAME=worker1
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4318/v1/logs
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318/v1/metrics
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
      - OTEL_LOG_LEVEL=DEBUG
    volumes:
      - celery:/app
    depends_on:
      - redis
      - django
      - rabbitmq
      - otel-collector

  db:
    image: postgres:16-alpine
    container_name: db
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env

  selenium:
    image: selenium/standalone-chrome
    container_name: selenium
    shm_size: 2gb
    environment:
      - SE_ENABLE_TRACING=false
    ports:
     - "4444:4444"

  prometheus:
      image: prom/prometheus
      container_name: 'prometheus'
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      volumes:
        - ./config/prometheus/:/etc/prometheus/
      ports:
        - 9090:9090

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    volumes:
      - ./config/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config", "/etc/otel-collector-config.yaml" ]
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      - prometheus

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
        - './config/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml'
    depends_on:
      - prometheus
      - loki

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 6831:6831
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  loki:
    image: grafana/loki:latest
    command:
      - "-config.file=/etc/loki/local-config.yaml"
    volumes:
      - './config/loki/local-config.yaml:/etc/loki/local-config.yaml'
      - ./shared/loki/chunks:/loki/chunks/
      - ./shared/loki/rules:/loki/rules/
    ports:
      - "3100:3100"

volumes:
  app:
    driver: local
    driver_opts:
        o: bind
        type: none
        device: .
  celery:
    driver: local
    driver_opts:
        o: bind
        type: none
        device: ./celeryworker
  db-data:
    driver: local
