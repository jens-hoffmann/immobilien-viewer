services:

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
     - "5672:5672"
     - "15672:15672"
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  django_celery:
    container_name: django_celery
    command: celery -A DjangoCelery worker -l INFO -Q djangotasks,django_dead_letter
    build:
      context: .
    volumes:
      - app:/app
    env_file:
      - .env
    environment:
      - DEBUG=1
      - OTEL_LOG_LEVEL=DEBUG
      - WEBSERVER=localhost:8000
    depends_on:
      - rabbitmq
      - nominatim
      - db

  db:
    image: postgis/postgis:17-3.5-alpine
    container_name: db
    hostname: db
    env_file:
      - .env
    ports:
      - "5432:5432"

  nominatim:
    container_name: nominatim
    image: mediagis/nominatim:4.5
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - PBF_PATH=/nominatim/data/berlin-brandenburg-241218.osm.pbf
      - IMPORT_STYLE=address
    shm_size: 256m
    volumes:
      - ./osm-maps/data:/nominatim/data
      - nominatim-data:/var/lib/postgresql/16/main

  prometheus:
      image: prom/prometheus
      container_name: 'prometheus'
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      volumes:
        - ./config/prometheus/:/etc/prometheus/
      ports:
        - 9090:9090
      depends_on:
        - otel-collector

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    volumes:
      - ./config/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config", "/etc/otel-collector-config.yaml" ]
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
        - './config/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml'
    depends_on:
      - prometheus
      - loki

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 6831:6831
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    depends_on:
      - otel-collector

  loki:
    image: grafana/loki:latest
    command:
      - "-config.file=/etc/loki/local-config.yaml"
    volumes:
      - './config/loki/local-config.yaml:/etc/loki/local-config.yaml'
      - ./shared/loki/chunks:/loki/chunks/
      - ./shared/loki/rules:/loki/rules/
    ports:
      - "3100:3100"

  solr:
    container_name: solr
    build:
      context: ./solr
    command: [ "solr-precreate", "haystackcore", "/haystackcore_conf"]
    ports:
      - "8983:8983"
    volumes:
      - solr-data:/var/solr

volumes:
  app:
    driver: local
    driver_opts:
        o: bind
        type: none
        device: .
  nominatim-data:
    driver: local
  solr-data:
    driver: local
  celery:
    driver: local
    driver_opts:
        o: bind
        type: none
        device: ./celeryworker